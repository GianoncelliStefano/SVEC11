function [F_tA,T_tA,F_mA,T_mA,F_vA,T_vA,F_p,F_centr_i,F_iz_i,F_cor,conf,chck_tip] =...
    S4_VaneDynamics_E(f_c,f_t,L,l,w,Rth,d,xG,beta,mass_vane,vGr,aGr_centr,aGr_iz,aGt_cor,p_1,p_2,Npt,toll_t,fDBG)
% This function calculates the forces acting on the vane for each discretized 0-to-360 angular position
% for a elliptical stator
% INPUT
% f_c [-]           : slot friction coefficient
% f_t [-]           : vane tip friction coefficient
% L [m]             : rotor length
% l [m]             : vane heigth
% w [m]             : array of vane excursion
% Rth [m]           : stator "radius" (segment from rotpr center to stator surface
% d [m]             : rotor diameter
% xG [m]            : array of center of mass position
% beta [rad]        : tip pressure angle
% mass_vane [kg]    : vane mass
% vGr [m/s]         : i-comp. of center of mass velocity
% aGr_centr [m/s^2] : i-comp. of center of mass centrifugal acceleration
% aGr_iz [m/s^2]    : i-comp. of center. of mass inertial acceleration
% aGt_cor [m/s^2]   : j-comp. of center of mass Coriolis acceleration
% p_1 [pa]          : array of low pressure acting on vane in [0:2pi]
% p_2 [pa]          : array of high pressure acting on vane in [0:2pi]
% Npt [-]           : grid discretization points
% toll_t [-]        : theorical tolerance
% fDBG [-]          : debug flag
%
% OUTPUT
% F_tA [N]       : reaction force at vane tip
% T_tA [N]       : friction force at vane tip (generated by F_tA) 
% F_mA [N]       : reaction force in rotor-vane contact point
% T_mA [N]       : friction force in rotor-vane contact point (generated by F_mA) 
% F_vA [N]       : reaction force at vane bottom
% T_vA [N]       : friction force at vane bottom (generated by F_vA) 
% F_p [N]        : pressure force in exposed side
% F_centr_i [N]  : centrifugal force
% F_iz_i [N]     : inertial force (along the vane)
% F_cor [N]      : Corolis force (perpendicular to vane)
% conf [-]       : array of vane configurations
% chck_tip       : boolean array - 1: contact between vane and stator    0: NO contact between vane and stator
%
% NOTE:  1) i-compp. is along the vane
%        2) j-comp. is perpendicular to the vane
%        3) pressure and suction side are referred to compressor logic

% - Hp:  1) vane are considered as omogeneous, without holes
%        2) oil is not considered
%        3) thin vanes (vane thickness is null)

    %% FORCES DETERMINATION %%
    % pressure force
    deltaP = p_2-p_1;
    F_p    = (L*w.*deltaP); % pressure force across the vane [N]
    clear deltaP

    % inertial forces [N]
    F_centr_i = mass_vane*aGr_centr; % centrifugal force
    F_iz_i    = mass_vane*aGr_iz;    % inertial force
    F_cor     = mass_vane*aGt_cor;   % coriolis force

    %% PRELIMINARY SOLUTION - analytical method %%
    % Definition of useful parameters
    r    = d/2;
    f_ts = f_t*(cos(beta)-sin(beta)/f_t)./(cos(beta)+sin(beta)*f_t); % proxy vane tip friction coeffient
    f_cv = f_c*sign(vGr);                                            % proxy vane slot friction coeffient
    A    = F_centr_i - F_iz_i;
    B    = -F_p.*(Rth-w/2) - F_cor.*xG;
    C    = -f_ts.*Rth;
    D    = r(1:end);
    E    = -(Rth(1:end)-l);
    Nv   = (f_cv.*C-D).*(f_ts.*A+F_p+F_cor)-(C.*A+B).*(1+f_cv.*f_ts);
    Dv   = (D-f_cv.*C).*(1-f_cv.*f_ts)+(E-f_cv.*C).*(1+f_cv.*f_ts);

    % Preliminary solution calculation
    F_vAp = Nv./Dv;
    F_mAp = (F_vAp.*(1-f_cv.*f_ts)+f_ts.*A+F_p+F_cor)./(1+f_cv.*f_ts);
    clear Nv Dv
    % null values are set to 1e-12, otherwise sign() is null 
    F_vAp(F_vAp==0) = 1e-12;
    F_vAp(F_mAp==0) = 1e-12;

     %% CONFIGURATIONS IDENTIFICATION - analytical method %%
    s1   = NaN(1,Npt);          % sign of F_m
    s2   = NaN(1,Npt);          % sign of F_v
    conf = NaN(1,Npt);          % configuration array

    % I configuration
    cond1     = sign(F_mAp) == 1 & sign(F_vAp) == 1;
    s1(cond1) = 1;
    s2(cond1) = 1;
    conf(cond1) = 1;
    % II configuration
    cond2     = sign(F_mAp) == -1 & sign(F_vAp) == -1;
    s1(cond2) = -1;
    s2(cond2) = -1;
    conf(cond2) = 2;
    % III configuration
    cond3     = sign(F_mAp) == -1 & sign(F_vAp) == 1;
    s1(cond3) = -1;
    s2(cond3) =  1;
    conf(cond3) = 3;
    % IV configuration
    cond4     = sign(F_mAp) == 1 & sign(F_vAp) == -1;
    s1(cond4) =  1;
    s2(cond4) = -1;
    conf(cond4) = 4;

    %% REAL SOLUTION - analytical method %%
    % correction of factor according to configuration
    fct1 = (1-s2.*f_cv.*f_ts);
    fct2 = (1+s1.*f_cv.*f_ts);
    fct3 = (f_ts.*A+F_p+F_cor);
    Nv   = (s1.*f_cv.*C-D).*fct3 -(C.*A+B).*fct2;
    Dv   = (D-s1.*f_cv.*C).*fct1 +(E-s2.*f_cv.*C).*fct2;
    fct4 = A-s2.*f_cv.*Nv./Dv;
    clear F_mAp F_vAp

    % calculation of reaction forces [N]
    F_vA  = Nv./Dv;                                    % reaction at vane bottom
    F_mA  = (F_vA.*fct1 + fct3)./fct2;                 % reaction at vane-rotor contact point
    F_tsA = fct4-s1.*f_cv.*(F_vA.*fct1 +fct3)./fct2;
    F_tA  = F_tsA.*cos(beta) - f_ts.*F_tsA.*sin(beta); % tip reaction force

    % friction force computation [N]
    T_tA   = f_t*F_tA;               % friction generated by F_t
    T_mA   = f_cv.*F_mA;             % friction generated by F_m
    T_vA   = f_cv.*F_vA;             % friction generated by F_v
    F_rad = -F_iz_i+F_centr_i-T_mA-T_vA; % tip contact force
    clear A B C D E cond1 cond2 cond3 cond4 s1 s2 fct1 fct2 Nv Dv f_ts F_tsA

    %% RISOLUZIONE SISTEMA PRIMO TENTATIVO - metodo numerico %%
    if fDBG == 1

        % preallocation
        A = NaN(3,3,Npt); % matrice coefficienti
        b = NaN(3,1,Npt); % vettore termini noti
        F = NaN(3,1,Npt); % vettore forze incognite

        % definition of matrixes (unk: F_t, F_m, F_v)
        A(1,1,:) = -cos(beta) - f_t*sin(beta);
        A(1,2,:) = -f_cv;
        A(1,3,:) = -f_cv;
        A(2,1,:) = sin(beta) - f_t*cos(beta);
        A(2,2,:) = 1;
        A(2,3,:) = -1;
        A(3,1,:) = (sin(beta) - f_t*cos(beta)).*Rth;
        A(3,2,:) = r;
        A(3,3,:) = -(Rth-l);
        b(1,1,:) = F_iz_i - F_centr_i;
        b(2,1,:) = F_p + F_cor;
        b(3,1,:) = F_p.*(Rth-w/2) + F_cor.*xG;

        % system solve and preliminary solution extraction
        for i=1:Npt
            F(:,:,i)=A(:,:,i)\b(:,:,i);
        end, clear i
        F_mNp(1:Npt) = F(2,1,:);
        F_vNp(1:Npt) = F(3,1,:);

        %% CONFIGURATIONS IDENTIFICATIONS% %%
        % I configuration - no need of corrections
        % II configuration
        cond2        = sign(F_mNp) == -1 & sign(F_vNp) == -1;
        A(1,2,cond2) = f_cv(cond2);
        A(1,3,cond2) = f_cv(cond2);
        % III configuration
        cond3        = sign(F_mNp) == -1 & sign(F_vNp) == 1;
        A(1,2,cond3) = f_cv(cond3);
        A(1,3,cond3) = -f_cv(cond3);
        % IV configuration
        cond4        = sign(F_mNp) == 1 & sign(F_vNp) == -1;
        A(1,2,cond4) = -f_cv(cond4);
        A(1,3,cond4) = f_cv(cond4);

        %% REAL FORCES CALCULATIONS - numerical method %%
        for i=1:Npt
            F(:,:,i)=A(:,:,i)\b(:,:,i);
        end, clear i A b
        clear A b cond2 cond3 cond4 f_cv F_mNp F_vNp

        F_tN(1:Npt) = F(1,1,:);  % tip reaction force [N]
        F_mN(1:Npt) = F(2,1,:);  % reaction at vane-rotor contact point [N]
        F_vN(1:Npt) = F(3,1,:);  % reaction at vane bottom [N]
        clear F
    end

    %% CHECKS %%
    chck_tip = F_rad<0;
    if sum(chck_tip)>=1
        warning('S4_VaneDynamics_E:Contact','No contact between vane tip and stator')
        SX_Logfile ('w',{lastwarn});
    end
    chck_tip = ~chck_tip;

    if fDBG == 1    
        errF_t = abs((F_tN-F_tA)./F_tA);
        errF_m = abs((F_mN-F_mA)./F_mA);
        errF_v = abs((F_vN-F_vA)./F_vA);
        
        chck1 = errF_t>toll_t;
        chck2 = errF_m>toll_t;
        chck3 = errF_v>toll_t;
        chck4 = isnan(conf);
        
        if sum(chck1)>=1
            warning('S4_VaneDynamics_C:forces','Analytical and numerical model for tip forces do not match. Max relative error: %2.6f', max(errF_t)*100);
            SX_Logfile ('d',{lastwarn});
        end
        if sum(chck2)>=1
            warning('S4_VaneDynamics_C:forces','Analytical and numerical model for middle-vane forces do not match. Max relative error: %2.6f', max(errF_m)*100);
            SX_Logfile ('d',{lastwarn});
        end
        if sum(chck3)>=1
            warning('S4_VaneDynamics_C:forces','Analytical and numerical model for vane-bottom forces do not match. Max relative error: %2.6f', max(errF_v)*100);
            SX_Logfile ('d',{lastwarn});
        end
        if sum(chck4)>=1
            warning('S4_VaneDynamics_C:forces','Invalid vane configuration')
            SX_Logfile ('d',{lastwarn});
        end, clear errF_t errF_m errF_v chck1 chck2 chck3 chck4 F_tN F_mN F_vN
    end       

end
